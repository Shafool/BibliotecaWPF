//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BibliotecaWPF.ServicioBiblioteca {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioBiblioteca.wsInvestigacionSoap")]
    public interface wsInvestigacionSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarAutor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarAutor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarAutor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarAutorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarAutor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AgregarAutor(string codAutor, string Apellidos, string Nombre, string Nacionalidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarAutor", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AgregarAutorAsync(string codAutor, string Apellidos, string Nombre, string Nacionalidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarAutor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ActualizarAutor(string codAutor, string Apellidos, string Nombre, string Nacionalidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarAutor", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ActualizarAutorAsync(string codAutor, string Apellidos, string Nombre, string Nacionalidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarAutor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EliminarAutor(string codAutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarAutor", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EliminarAutorAsync(string codAutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarAutor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarAutor(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarAutor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarAutorAsync(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarLibro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarLibro();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarLibro", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarLibroAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarLibro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AgregarLibro(string codLibro, string titulo, string editorial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarLibro", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AgregarLibroAsync(string codLibro, string titulo, string editorial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarLibro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EliminarLibro(string codLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarLibro", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EliminarLibroAsync(string codLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarLibro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ActualizarLibro(string codLibro, string titulo, string editorial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarLibro", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ActualizarLibroAsync(string codLibro, string titulo, string editorial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarLibro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarLibro(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarLibro", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarLibroAsync(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarPrestamo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarPrestamo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarPrestamo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarPrestamoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarPrestamo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AgregarPrestamo(string codAutor, string codLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarPrestamo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AgregarPrestamoAsync(string codAutor, string codLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarPrestamo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EliminarPrestamo(string codAutor, string codLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarPrestamo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EliminarPrestamoAsync(string codAutor, string codLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarPrestamo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarPrestamo(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarPrestamo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarPrestamoAsync(string texto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsInvestigacionSoapChannel : BibliotecaWPF.ServicioBiblioteca.wsInvestigacionSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsInvestigacionSoapClient : System.ServiceModel.ClientBase<BibliotecaWPF.ServicioBiblioteca.wsInvestigacionSoap>, BibliotecaWPF.ServicioBiblioteca.wsInvestigacionSoap {
        
        public wsInvestigacionSoapClient() {
        }
        
        public wsInvestigacionSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsInvestigacionSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsInvestigacionSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsInvestigacionSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ListarAutor() {
            return base.Channel.ListarAutor();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarAutorAsync() {
            return base.Channel.ListarAutorAsync();
        }
        
        public bool AgregarAutor(string codAutor, string Apellidos, string Nombre, string Nacionalidad) {
            return base.Channel.AgregarAutor(codAutor, Apellidos, Nombre, Nacionalidad);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarAutorAsync(string codAutor, string Apellidos, string Nombre, string Nacionalidad) {
            return base.Channel.AgregarAutorAsync(codAutor, Apellidos, Nombre, Nacionalidad);
        }
        
        public bool ActualizarAutor(string codAutor, string Apellidos, string Nombre, string Nacionalidad) {
            return base.Channel.ActualizarAutor(codAutor, Apellidos, Nombre, Nacionalidad);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarAutorAsync(string codAutor, string Apellidos, string Nombre, string Nacionalidad) {
            return base.Channel.ActualizarAutorAsync(codAutor, Apellidos, Nombre, Nacionalidad);
        }
        
        public bool EliminarAutor(string codAutor) {
            return base.Channel.EliminarAutor(codAutor);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarAutorAsync(string codAutor) {
            return base.Channel.EliminarAutorAsync(codAutor);
        }
        
        public System.Data.DataSet BuscarAutor(string texto) {
            return base.Channel.BuscarAutor(texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarAutorAsync(string texto) {
            return base.Channel.BuscarAutorAsync(texto);
        }
        
        public System.Data.DataSet ListarLibro() {
            return base.Channel.ListarLibro();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarLibroAsync() {
            return base.Channel.ListarLibroAsync();
        }
        
        public bool AgregarLibro(string codLibro, string titulo, string editorial) {
            return base.Channel.AgregarLibro(codLibro, titulo, editorial);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarLibroAsync(string codLibro, string titulo, string editorial) {
            return base.Channel.AgregarLibroAsync(codLibro, titulo, editorial);
        }
        
        public bool EliminarLibro(string codLibro) {
            return base.Channel.EliminarLibro(codLibro);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarLibroAsync(string codLibro) {
            return base.Channel.EliminarLibroAsync(codLibro);
        }
        
        public bool ActualizarLibro(string codLibro, string titulo, string editorial) {
            return base.Channel.ActualizarLibro(codLibro, titulo, editorial);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarLibroAsync(string codLibro, string titulo, string editorial) {
            return base.Channel.ActualizarLibroAsync(codLibro, titulo, editorial);
        }
        
        public System.Data.DataSet BuscarLibro(string texto) {
            return base.Channel.BuscarLibro(texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarLibroAsync(string texto) {
            return base.Channel.BuscarLibroAsync(texto);
        }
        
        public System.Data.DataSet ListarPrestamo() {
            return base.Channel.ListarPrestamo();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarPrestamoAsync() {
            return base.Channel.ListarPrestamoAsync();
        }
        
        public bool AgregarPrestamo(string codAutor, string codLibro) {
            return base.Channel.AgregarPrestamo(codAutor, codLibro);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarPrestamoAsync(string codAutor, string codLibro) {
            return base.Channel.AgregarPrestamoAsync(codAutor, codLibro);
        }
        
        public bool EliminarPrestamo(string codAutor, string codLibro) {
            return base.Channel.EliminarPrestamo(codAutor, codLibro);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarPrestamoAsync(string codAutor, string codLibro) {
            return base.Channel.EliminarPrestamoAsync(codAutor, codLibro);
        }
        
        public System.Data.DataSet BuscarPrestamo(string texto) {
            return base.Channel.BuscarPrestamo(texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarPrestamoAsync(string texto) {
            return base.Channel.BuscarPrestamoAsync(texto);
        }
    }
}
